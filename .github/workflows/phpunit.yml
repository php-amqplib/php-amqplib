name: PHPUnit tests

on: [push, pull_request]

jobs:
  run:
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        include:
          - php: '7.1'
            phpseclib: '^2.0'
            composer: 'composer:v1'
            coverage: none
          - php: '7.2'
            phpseclib: '^2.0'
            composer: 'composer:v1'
            coverage: none
          - php: '7.3'
            phpseclib: '^3.0'
            composer: 'composer:v1'
            coverage: none
          - php: '7.4'
            phpseclib: '^3.0'
            composer: 'composer:v1'
            coverage: none
          - php: '7.4'
            phpseclib: '^3.0'
            composer: 'composer:v2'
            coverage: 'xdebug'
          - php: '8.0'
            phpseclib: '^3.0'
            composer: 'composer:v2'
            coverage: none
          - php: '8.1'
            phpseclib: '^3.0'
            composer: 'composer:v2'
            coverage: none
    services:
      rabbitmq:
        # 3.8.10 and later versions has enabled TLSv1.3 by default which is not supported by PHP images
        # TLSv1.3 can be disabled by using configuration file, but not environment variables
        image: rabbitmq:3.8.9-management
        ports:
          - 5671:5671
          - 5672:5672
          - 15671:15671
          - 15672:15672
        volumes:
          - ${{ github.workspace }}:/src
        env:
            RABBITMQ_SSL_CACERTFILE: /src/tests/certs/ca_certificate.pem
            RABBITMQ_SSL_CERTFILE: /src/tests/certs/server_certificate.pem
            RABBITMQ_SSL_KEYFILE: /src/tests/certs/server_key.pem
            RABBITMQ_SSL_VERIFY: verify_peer
            RABBITMQ_SSL_FAIL_IF_NO_PEER_CERT: 0

    name: PHP ${{ matrix.php }} + phpseclib ${{ matrix.phpseclib }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        tools: ${{ matrix.composer }}
        extensions: bcmath, curl, dom, mbstring, pcntl, sockets, xml
        coverage: ${{ matrix.coverage }}

    - name: Check PHP info
      run: php tests/phpinfo.php

    - name: Start broker service
      run: docker restart ${{ job.services.rabbitmq.id }}

    - name: Composer install
      run: composer require --prefer-dist --no-progress --no-suggest phpseclib/phpseclib ${{ matrix.phpseclib }}

    - name: Wait for broker service
      run: php ./tests/wait_broker.php

    - name: PHPUnit tests
      run: ./vendor/bin/phpunit --exclude-group proxy
      if: matrix.coverage == 'none'

    - name: PHPUnit tests + coverage
      run: ./vendor/bin/phpunit --exclude-group proxy --coverage-clover=coverage.xml
      if: matrix.coverage != 'none'

    - name: Upload Codecov coverage
      if: matrix.coverage != 'none'
      uses: codecov/codecov-action@v1
      with:
        file: './coverage.xml'
        fail_ci_if_error: true

    - name: Upload Scrutinizer coverage
      if: matrix.coverage != 'none'
      continue-on-error: true
      uses: sudo-bot/action-scrutinizer@latest
      with:
          cli-args: "--format=php-clover coverage.xml"
